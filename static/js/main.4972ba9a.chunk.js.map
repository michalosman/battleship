{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","factories/Ship.ts","factories/Gameboard.ts","factories/Player.ts","components/Game/Board.tsx","components/elements/Button.tsx","components/Game/EndScreen.tsx","components/Game/Game.tsx","components/Main.tsx","App.tsx","theme/Theme.ts","theme/GlobalStyle.ts","index.tsx"],"names":["FooterWrapper","styled","footer","theme","padding","sm","GithubLink","a","colors","dark","primary","Footer","href","target","rel","HeaderWrapper","header","lg","Header","Ship","length","hits","this","position","includes","push","SIZE","Gameboard","board","missedShots","initialize","i","j","ship","positionX","positionY","isVertical","isPlacementPossible","isEmpty","ships","carrier","battleship","destroyer","submarine","patrolBoat","succesfulPlacements","Math","floor","random","placeShip","x","y","hitIndex","hit","isBoardEmpty","isSunk","result","Player","name","alreadyHitCoords","gameboard","hasAlreadyHit","receiveAttack","BoardWrapper","div","Field","status","css","light","owner","secondary","green","red","Board","enemy","onFieldClick","fields","row","column","fieldComponent","onClick","uuidv4","loadFields","ButtonWrapper","button","md","borderRadius","Button","content","EndScreenWrapper","EndMessage","p","Overlay","EndScreen","message","resetGame","GameWrapper","Boards","Game","useState","isGameOver","setIsGameOver","endScreenMessage","setEndScreenMessage","user","setUser","computer","setComputer","userGameboard","setUserGameboard","computerGameboard","setComputerGameboard","useEffect","setRandomGameboards","random1","placeShipsRandomly","random2","userCopy","Object","assign","create","getPrototypeOf","computerCopy","userGameboardCopy","computerGameboardCopy","attack","randomAttack","MainWrapper","main","Main","App","Theme","width","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4972ba9a.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { FaGithub } from 'react-icons/fa'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterWrapper>\r\n      Copyright © 2021 michalosman\r\n      <GithubLink\r\n        href=\"https://github.com/michalosman\"\r\n        target=\"_blank\"\r\n        rel=\"noopener\"\r\n      >\r\n        <FaGithub />\r\n      </GithubLink>\r\n    </FooterWrapper>\r\n  )\r\n}\r\n\r\nconst FooterWrapper = styled.footer`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  padding: ${({ theme }) => theme.padding.sm};\r\n  font-size: 2.4rem;\r\n`\r\n\r\nconst GithubLink = styled.a`\r\n  display: flex;\r\n  margin-left: 1rem;\r\n  color: ${({ theme }) => theme.colors.dark.primary};\r\n  transition: transform 0.15s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`\r\n\r\nexport default Footer\r\n","import styled from 'styled-components'\r\n\r\nconst Header = () => {\r\n  return <HeaderWrapper>BATTLESHIP</HeaderWrapper>\r\n}\r\n\r\nconst HeaderWrapper = styled.header`\r\n  padding: ${({ theme }) => theme.padding.lg};\r\n  font-family: 'Big Shoulders Stencil Text', cursive;\r\n  font-size: 12rem;\r\n  font-weight: 900;\r\n  letter-spacing: 1rem;\r\n  line-height: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default Header\r\n","class Ship {\r\n  length: number\r\n  hits: number[]\r\n\r\n  constructor(length: number) {\r\n    this.length = length\r\n    this.hits = []\r\n  }\r\n\r\n  hit(position: number) {\r\n    if (this.hits.includes(position) || position < 0 || position >= this.length)\r\n      return\r\n    this.hits.push(position)\r\n  }\r\n\r\n  isSunk() {\r\n    return this.hits.length === this.length\r\n  }\r\n}\r\n\r\nexport default Ship\r\n","import Ship from './Ship'\r\n\r\nconst SIZE = 10\r\n\r\nclass Gameboard {\r\n  board: Ship[][]\r\n  missedShots: boolean[][]\r\n\r\n  constructor() {\r\n    this.board = []\r\n    this.missedShots = []\r\n    this.initialize()\r\n  }\r\n\r\n  initialize() {\r\n    for (let i = 0; i < SIZE; i++) {\r\n      this.board[i] = []\r\n      this.missedShots[i] = []\r\n      for (let j = 0; j < SIZE; j++) {\r\n        this.board[i][j] = null\r\n        this.missedShots[i][j] = false\r\n      }\r\n    }\r\n  }\r\n\r\n  placeShip(\r\n    ship: Ship,\r\n    positionX: number,\r\n    positionY: number,\r\n    isVertical: boolean\r\n  ) {\r\n    if (!this.isPlacementPossible(ship, positionX, positionY, isVertical))\r\n      return false\r\n\r\n    if (isVertical) {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        this.board[positionX][positionY + i] = ship\r\n      }\r\n    } else {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        this.board[positionX + i][positionY] = ship\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  placeShipsRandomly() {\r\n    if (!this.isEmpty()) return\r\n\r\n    const ships = []\r\n    const carrier = new Ship(5)\r\n    const battleship = new Ship(4)\r\n    const destroyer = new Ship(3)\r\n    const submarine = new Ship(3)\r\n    const patrolBoat = new Ship(2)\r\n    ships.push(carrier, battleship, destroyer, submarine, patrolBoat)\r\n\r\n    let succesfulPlacements = 0\r\n\r\n    while (succesfulPlacements < 5) {\r\n      const positionX = Math.floor(Math.random() * 10)\r\n      const positionY = Math.floor(Math.random() * 10)\r\n      const isVertical = Math.floor(Math.random() * 2) === 1 ? true : false\r\n\r\n      if (\r\n        this.placeShip(\r\n          ships[succesfulPlacements],\r\n          positionX,\r\n          positionY,\r\n          isVertical\r\n        )\r\n      )\r\n        succesfulPlacements++\r\n    }\r\n  }\r\n\r\n  isPlacementPossible(\r\n    ship: Ship,\r\n    positionX: number,\r\n    positionY: number,\r\n    isVertical: boolean\r\n  ) {\r\n    // case position is out of gameboard\r\n    if (\r\n      positionX < 0 ||\r\n      positionX > SIZE - 1 ||\r\n      positionY < 0 ||\r\n      positionY > SIZE - 1\r\n    )\r\n      return false\r\n\r\n    // case ship doesn't fit in gameboard\r\n    if (isVertical) {\r\n      if (positionY + ship.length > SIZE) return false\r\n    } else {\r\n      if (positionX + ship.length > SIZE) return false\r\n    }\r\n\r\n    // case any of the fields is already taken\r\n    if (isVertical) {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        if (this.board[positionX][positionY + i]) return false\r\n      }\r\n    } else {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        if (this.board[positionX + i][positionY]) return false\r\n      }\r\n    }\r\n\r\n    // case any of the neighbour fields are already taken\r\n    if (isVertical) {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        for (let x = -1; x <= 1; x++) {\r\n          for (let y = -1; y <= 1; y++) {\r\n            if (\r\n              positionX + x < 0 ||\r\n              positionX + x >= SIZE ||\r\n              positionY + y + i < 0 ||\r\n              positionY + y + i >= SIZE\r\n            )\r\n              continue\r\n            if (this.board[positionX + x][positionY + y + i]) return false\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < ship.length; i++) {\r\n        for (let x = -1; x <= 1; x++) {\r\n          for (let y = -1; y <= 1; y++) {\r\n            if (\r\n              positionX + x + i < 0 ||\r\n              positionX + x + i >= SIZE ||\r\n              positionY + y < 0 ||\r\n              positionY + y >= SIZE\r\n            )\r\n              continue\r\n            if (this.board[positionX + x + i][positionY + y]) return false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  receiveAttack(positionX: number, positionY: number) {\r\n    if (\r\n      positionX < 0 ||\r\n      positionX >= SIZE ||\r\n      positionY < 0 ||\r\n      positionY >= SIZE\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    if (this.board[positionX][positionY]) {\r\n      let hitIndex = 0\r\n      // is vertical\r\n      if (positionY > 0 && this.board[positionX][positionY - 1]) {\r\n        let i = 1\r\n        while (positionY - i >= 0 && this.board[positionX][positionY - i]) {\r\n          hitIndex++\r\n          i++\r\n        }\r\n      }\r\n      // is horizontal\r\n      else if (positionX > 0 && this.board[positionX - 1][positionY]) {\r\n        let i = 1\r\n        while (positionX - i >= 0 && this.board[positionX - i][positionY]) {\r\n          hitIndex++\r\n          i++\r\n        }\r\n      }\r\n      this.board[positionX][positionY].hit(hitIndex)\r\n      return true\r\n    } else {\r\n      this.missedShots[positionX][positionY] = true\r\n      return false\r\n    }\r\n  }\r\n\r\n  isGameOver() {\r\n    let isBoardEmpty = true\r\n    for (let i = 0; i < SIZE; i++) {\r\n      for (let j = 0; j < SIZE; j++) {\r\n        if (this.board[i][j]) {\r\n          isBoardEmpty = false\r\n          if (!this.board[i][j].isSunk()) {\r\n            return false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return isBoardEmpty ? false : true\r\n  }\r\n\r\n  isEmpty() {\r\n    for (let i = 0; i < SIZE; i++) {\r\n      for (let j = 0; j < SIZE; j++) {\r\n        if (this.board[i][j] !== null) return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  getEmptyFieldsAmount() {\r\n    let result = 0\r\n    for (let i = 0; i < SIZE; i++) {\r\n      for (let j = 0; j < SIZE; j++) {\r\n        if (this.board[i][j] === null) result++\r\n      }\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\nexport default Gameboard\r\n","import Gameboard from './Gameboard'\r\n\r\nclass Player {\r\n  name: string\r\n  alreadyHitCoords: number[][]\r\n\r\n  constructor(name: string) {\r\n    this.name = name\r\n    this.alreadyHitCoords = []\r\n  }\r\n\r\n  attack(positionX: number, positionY: number, gameboard: Gameboard) {\r\n    if (this.hasAlreadyHit(positionX, positionY)) return\r\n\r\n    this.alreadyHitCoords.push([positionX, positionY])\r\n    gameboard.receiveAttack(positionX, positionY)\r\n  }\r\n\r\n  randomAttack(gameboard: Gameboard) {\r\n    if (this.alreadyHitCoords.length === 100) return\r\n\r\n    let positionX = Math.floor(Math.random() * 10)\r\n    let positionY = Math.floor(Math.random() * 10)\r\n\r\n    while (this.hasAlreadyHit(positionX, positionY)) {\r\n      positionX = Math.floor(Math.random() * 10)\r\n      positionY = Math.floor(Math.random() * 10)\r\n    }\r\n\r\n    this.alreadyHitCoords.push([positionX, positionY])\r\n    gameboard.receiveAttack(positionX, positionY)\r\n  }\r\n\r\n  hasAlreadyHit(positionX: number, positionY: number) {\r\n    for (let i = 0; i < this.alreadyHitCoords.length; i++) {\r\n      if (\r\n        this.alreadyHitCoords[i][0] === positionX &&\r\n        this.alreadyHitCoords[i][1] === positionY\r\n      ) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport default Player\r\n","import styled, { css } from 'styled-components'\r\nimport Gameboard from '../../factories/Gameboard'\r\nimport Player from '../../factories/Player'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\ninterface Props {\r\n  gameboard: Gameboard\r\n  owner: Player\r\n  enemy: Player\r\n  onFieldClick?: (positionX: number, positionY: number) => void\r\n}\r\n\r\nconst Board = ({ gameboard, owner, enemy, onFieldClick }: Props) => {\r\n  const loadFields = () => {\r\n    const fields = []\r\n    for (let row = 0; row < gameboard.board.length; row++) {\r\n      for (let column = 0; column < gameboard.board[row].length; column++) {\r\n        const field = gameboard.board[row][column]\r\n        let status = 'default'\r\n        if (field) {\r\n          if (owner.name !== 'Computer') status = 'ship'\r\n          if (enemy.hasAlreadyHit(row, column)) status = 'hit'\r\n        } else {\r\n          if (gameboard.missedShots[row][column]) status = 'missed'\r\n        }\r\n\r\n        let fieldComponent = <Field></Field>\r\n        if (owner.name === 'Computer') {\r\n          fieldComponent = (\r\n            <Field\r\n              key={uuidv4()}\r\n              status={status}\r\n              owner={owner}\r\n              onClick={() => onFieldClick(row, column)}\r\n            />\r\n          )\r\n        } else {\r\n          fieldComponent = (\r\n            <Field key={uuidv4()} status={status} owner={owner} />\r\n          )\r\n        }\r\n        fields.push(fieldComponent)\r\n      }\r\n    }\r\n    return fields\r\n  }\r\n\r\n  return <BoardWrapper>{loadFields()}</BoardWrapper>\r\n}\r\n\r\nconst BoardWrapper = styled.div`\r\n  display: grid;\r\n  width: 40rem;\r\n  height: 40rem;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  grid-template-rows: repeat(10, 1fr);\r\n  border: 1px solid ${({ theme }) => theme.colors.dark.primary};\r\n`\r\n\r\ninterface IField {\r\n  status?: string\r\n  owner?: Player\r\n}\r\n\r\nconst Field = styled.div<IField>`\r\n  border: 1px solid ${({ theme }) => theme.colors.dark.primary};\r\n\r\n  ${({ status }) =>\r\n    status === 'default' &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.colors.light.primary};\r\n\r\n      ${({ owner }: IField) =>\r\n        owner.name === 'Computer' &&\r\n        css`\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            background-color: ${({ theme }) => theme.colors.light.secondary};\r\n          }\r\n        `}\r\n    `}\r\n\r\n  ${({ status }) =>\r\n    status === 'ship' &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.colors.dark.secondary};\r\n    `}\r\n  \r\n  ${({ status }) =>\r\n    status === 'missed' &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.colors.green};\r\n    `}\r\n\r\n  ${({ status }) =>\r\n    status === 'hit' &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.colors.red};\r\n    `}\r\n`\r\n\r\nexport default Board\r\n","import styled from 'styled-components'\r\n\r\ninterface Props {\r\n  content: string\r\n  onClick: () => void\r\n}\r\n\r\nconst Button = ({ content, onClick }: Props) => {\r\n  return <ButtonWrapper onClick={onClick}>{content}</ButtonWrapper>\r\n}\r\n\r\nconst ButtonWrapper = styled.button`\r\n  padding: ${({ theme }) => theme.padding.sm} ${({ theme }) => theme.padding.md};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md};\r\n  background-color: ${({ theme }) => theme.colors.dark.primary};\r\n  color: ${({ theme }) => theme.colors.light.primary};\r\n  transition: transform 0.1s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n`\r\n\r\nexport default Button\r\n","import styled from 'styled-components'\r\nimport Button from '../elements/Button'\r\n\r\ninterface Props {\r\n  message: string\r\n  resetGame: () => void\r\n}\r\n\r\nconst EndScreen = ({ message, resetGame }: Props) => {\r\n  return (\r\n    <EndScreenWrapper>\r\n      <EndMessage>\r\n        <p>{message}</p>\r\n        <Button content={'Play again'} onClick={resetGame} />\r\n      </EndMessage>\r\n      <Overlay />\r\n    </EndScreenWrapper>\r\n  )\r\n}\r\n\r\nconst EndScreenWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst EndMessage = styled.p`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 500px;\r\n  height: 300px;\r\n  background-color: ${({ theme }) => theme.colors.light.primary};\r\n  z-index: 2;\r\n  padding: ${({ theme }) => theme.padding.md};\r\n  border-radius: ${({ theme }) => theme.borderRadius.md}; ;\r\n`\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: black;\r\n  opacity: 0.6;\r\n`\r\n\r\nexport default EndScreen\r\n","import { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Gameboard from '../../factories/Gameboard'\r\nimport Player from '../../factories/Player'\r\nimport Board from './Board'\r\nimport EndScreen from './EndScreen'\r\n// import StartScreen from './StartScreen'\r\n\r\nconst Game = () => {\r\n  // const [hasGameStarted, setHasGameStarted] = useState(false)\r\n  const [isGameOver, setIsGameOver] = useState(false)\r\n  const [endScreenMessage, setEndScreenMessage] = useState('')\r\n  const [user, setUser] = useState(new Player('User'))\r\n  const [computer, setComputer] = useState(new Player('Computer'))\r\n  const [userGameboard, setUserGameboard] = useState(new Gameboard())\r\n  const [computerGameboard, setComputerGameboard] = useState(new Gameboard())\r\n\r\n  useEffect(() => {\r\n    setRandomGameboards()\r\n  }, [])\r\n\r\n  const setRandomGameboards = () => {\r\n    const random1 = new Gameboard()\r\n    random1.placeShipsRandomly()\r\n    setUserGameboard(random1)\r\n\r\n    const random2 = new Gameboard()\r\n    random2.placeShipsRandomly()\r\n    setComputerGameboard(random2)\r\n  }\r\n\r\n  const resetGame = () => {\r\n    setUser(new Player('User'))\r\n    setComputer(new Player('Computer'))\r\n    setRandomGameboards()\r\n    setIsGameOver(false)\r\n  }\r\n\r\n  const handleComputerFieldClick = (positionX: number, positionY: number) => {\r\n    if (computerGameboard.isGameOver() || userGameboard.isGameOver()) return\r\n    if (user.hasAlreadyHit(positionX, positionY)) return\r\n\r\n    let userCopy: Player = Object.assign(\r\n      Object.create(Object.getPrototypeOf(user)),\r\n      user\r\n    )\r\n\r\n    let computerCopy: Player = Object.assign(\r\n      Object.create(Object.getPrototypeOf(computer)),\r\n      computer\r\n    )\r\n\r\n    let userGameboardCopy: Gameboard = Object.assign(\r\n      Object.create(Object.getPrototypeOf(userGameboard)),\r\n      userGameboard\r\n    )\r\n\r\n    let computerGameboardCopy: Gameboard = Object.assign(\r\n      Object.create(Object.getPrototypeOf(computerGameboard)),\r\n      computerGameboard\r\n    )\r\n\r\n    userCopy.attack(positionX, positionY, computerGameboardCopy)\r\n    setUser(userCopy)\r\n    setComputerGameboard(computerGameboardCopy)\r\n    if (computerGameboard.isGameOver()) {\r\n      setEndScreenMessage('You won')\r\n      setIsGameOver(true)\r\n      return\r\n    }\r\n\r\n    computerCopy.randomAttack(userGameboardCopy)\r\n    setComputer(computerCopy)\r\n    setUserGameboard(userGameboardCopy)\r\n    if (userGameboard.isGameOver()) {\r\n      setEndScreenMessage('Computer won')\r\n      setIsGameOver(true)\r\n      return\r\n    }\r\n  }\r\n\r\n  // const startGame = () => {\r\n  //   setHasGameStarted(true)\r\n  // }\r\n\r\n  return (\r\n    <GameWrapper>\r\n      {/* {hasGameStarted ? (\r\n        ''\r\n      ) : (\r\n        <StartScreen\r\n          gameboard={userGameboard}\r\n          startGame={startGame}\r\n          setUserGameboard={setUserGameboard}\r\n        />\r\n      )} */}\r\n      {isGameOver ? (\r\n        <EndScreen message={endScreenMessage} resetGame={resetGame} />\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Boards>\r\n        <Board gameboard={userGameboard} owner={user} enemy={computer}></Board>\r\n        <Board\r\n          gameboard={computerGameboard}\r\n          owner={computer}\r\n          enemy={user}\r\n          onFieldClick={handleComputerFieldClick}\r\n        ></Board>\r\n      </Boards>\r\n    </GameWrapper>\r\n  )\r\n}\r\n\r\nconst GameWrapper = styled.div`\r\n  font-size: 5rem;\r\n`\r\nconst Boards = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5rem;\r\n`\r\n\r\nexport default Game\r\n","import styled from 'styled-components'\r\nimport Game from './Game/Game'\r\n\r\nconst Main = () => {\r\n  return (\r\n    <MainWrapper>\r\n      <Game></Game>\r\n    </MainWrapper>\r\n  )\r\n}\r\n\r\nconst MainWrapper = styled.main`\r\n  margin-top: 12rem;\r\n`\r\n\r\nexport default Main\r\n","import Footer from './components/Footer'\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const Theme = {\r\n  colors: {\r\n    light: {\r\n      primary: '#eee',\r\n      secondary: '#ddd',\r\n    },\r\n    dark: {\r\n      primary: '#222',\r\n      secondary: '#444',\r\n    },\r\n    red: '#ff8585',\r\n    green: '#85ffb3',\r\n  },\r\n  padding: {\r\n    sm: '1rem',\r\n    md: '2rem',\r\n    lg: '4rem',\r\n  },\r\n  width: {\r\n    sm: '500px',\r\n    md: '1000px',\r\n    lg: '1500px',\r\n  },\r\n  borderRadius: {\r\n    sm: '5px',\r\n    md: '10px',\r\n    lg: '20px',\r\n  },\r\n}\r\n\r\nexport default Theme\r\n","import * as styled from 'styled-components'\r\n\r\nconst GlobalStyle = styled.createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n    line-height: 1.6;\r\n    /* Footer support */\r\n    position: relative;\r\n    min-height: 100%;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Poppins', sans-serif;\r\n    font-size: 1.6rem;\r\n    background-color: ${({ theme }) => theme.colors.light.primary};\r\n    color: ${({ theme }) => theme.colors.dark.primary};\r\n    /* Footer support */\r\n    margin-bottom: 5.2rem;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    line-height: 1.2;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  button,\r\n  input,\r\n  textarea {\r\n    border: none;\r\n    outline: none;\r\n    color: inherit;\r\n    font-family: inherit;\r\n    font-size: inherit;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (max-width: 1600px) {\r\n    html {\r\n      font-size: 55%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 1400px) {\r\n    html {\r\n      font-size: 45%;\r\n    }\r\n  }\r\n`\r\nexport default GlobalStyle\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from 'styled-components'\nimport Theme from './theme/Theme'\nimport GlobalStyle from './theme/GlobalStyle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}